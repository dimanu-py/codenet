[project]
name = "social-network"
version = "1.2.0"
description = "Project of a social network to practice DDD"


dependencies = [
    "alembic>=1.14.1",
    "asgi-correlation-id>=4.3.4",
    "asyncpg>=0.30.0",
    "fastapi[standard]>=0.115.7",
    "psycopg2-binary>=2.9.10",
    "pydantic-settings>=2.7.1",
    "sqlalchemy>=2.0.36",
    "sqlalchemy-utils>=0.42.0",
    "validators>=0.34.0",
]

requires-python = "==3.13.*"
readme = "README.md"
license = {text = "MIT"}

[dependency-groups]
dev = [
    {include-group = "lint"},
    {include-group = "test"},
    {include-group = "git"},
]

test = [
    "aiosqlite>=0.21.0",
    "coverage>=7.6.9",
    "doublex>=1.9.6.1",
    "doublex-expects>=0.7.1",
    "expects>=0.9.0",
    "faker>=35.0.0",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.2",
    "pytest-sugar>=1.0.0",
    "pytest-watch>=4.2.0",
    "pytest-xdist>=3.6.1",
    "testcontainers>=4.10.0",
]
lint = [
    "mypy>=1.13.0",
    "pip-audit>=2.9.0",
    "ruff>=0.8.3",
]
git = [
    "pre-commit>=4.1.0",
    "python-semantic-release>=10.2.0",
]


[tool.ruff]
line-length = 120
target-version = "py313"

[tool.ruff.lint]
select = ["E", "F", "W", "B", "C4", "UP", "I"]
ignore = ["B008"]

[tool.ruff.lint.isort]
known-first-party = ["src", "tests"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false


[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
commit_message = "bump: new version {version} created"
commit_parser = "conventional"
major_on_zero = true
allow_zero_version = false
no_git_verify = false
tag_format = "v{version}"
#assets = []
#logging_use_named_masks = false
#build_command_env = []
#repo_dir = "/home/dmartinez/Developer/social-network"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf", "refactor", "test"]
allowed_tags = ["feat", "fix", "refactor", "perf"]
default_bump_level = 0
parse_squash_commits = false
ignore_merge_commits = true

[tool.semantic_release.changelog]
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = ['''^Merge pull request #''', '''^Merge branch ''']
mode = "update"
template_dir = "templates/changelog"
#insertion_flag = "<!-- version list -->"

#[tool.semantic_release.branches.main]
#match = "(main|master)"
#prerelease_token = "rc"
#prerelease = false

#[tool.semantic_release.changelog.default_templates]
#changelog_file = "CHANGELOG.md"
#output_format = "md"
#mask_initial_release = true

#[tool.semantic_release.changelog.environment]
#block_start_string = "{%"
#block_end_string = "%}"
#variable_start_string = "{{"
#variable_end_string = "}}"
#comment_start_string = "{#"
#comment_end_string = "#}"
#trim_blocks = false
#lstrip_blocks = false
#newline_sequence = "\n"
#keep_trailing_newline = false
#extensions = []
#autoescape = false
#
#[tool.semantic_release.commit_author]
#env = "GIT_COMMIT_AUTHOR"
#default = "semantic-release <semantic-release>"
#
#[tool.semantic_release.remote]
#name = "origin"
#type = "github"
#ignore_token_for_push = false
#insecure = false
#
#[tool.semantic_release.publish]
#dist_glob_patterns = ["dist/*"]
#upload_to_vcs_release = true

